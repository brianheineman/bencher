---
export const prerender = true;

import { render } from "astro:content";

import DocsLayout from "../../../../layouts/docs/DocsLayout.astro";
import AuthOverride from "../../../../components/auth/AuthOverride";
import { Language, signupId } from "../../../../i18n/ui";
import Disclosure from "../../../../components/docs/Disclosure";
import { getLangPaths } from "../../../../i18n/utils";
import Collection from "../../../../util/collection";

const collection = Collection.docs_tutorial;

export async function getStaticPaths() {
	const collection = Collection.docs_tutorial;
	const pages = await getLangPaths(collection);
	return pages.filter((page) => page.params.slug === "quick-start");
}

const lang = Astro.params.lang as Language;

const signupText = () => {
	switch (lang) {
		case Language.de:
			return "Sie sind für Bencher Cloud angemeldet";
		case Language.es:
			return "Estás registrado en Bencher Cloud";
		case Language.fr:
			return "Vous êtes inscrit à Bencher Cloud";
		case Language.ja:
			return "ベンチャー クラウド にサインアップしています";
		case Language.pt:
			return "Você está inscrito no Bencher Cloud";
		case Language.ru:
			return "Вы зарегистрированы в Bencher Cloud";
		case Language.zh:
			return "您已注册 Bencher Cloud";
		default:
			return "You are signed up for Bencher Cloud";
	}
};

const page = Astro.props;
const { Content } = await render(page);

const slug = "quick-start";
---

<DocsLayout
  title={page?.data?.title}
  description={page?.data?.description}
  heading={page?.data?.heading}
  published={page?.data?.published}
  modified={page?.data?.modified}
  lang={lang}
  collection={collection}
  slug={slug}
>
  <Content />
  <AuthOverride client:only="solid-js" elementId={signupId}>
    <h4 id={signupId}>✅ {signupText}</h4>
  </AuthOverride>

  <Disclosure collection={collection} slug={slug} lang={lang} />
</DocsLayout>
