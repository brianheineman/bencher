---
export const prerender = false;

import { BENCHER_API_URL, INTERNAL_API_URL } from "astro:env/server";

import PerfLayout from "../../../../layouts/perf/PerfLayout.astro";
import Tetris from "../../../../components/site/Tetris.astro";
import { fetchSSR } from "../../../../components/perf/util";
import * as Sentry from "@sentry/astro";
import type { JsonProject } from "../../../../types/bencher";
import PlotsPanel from "../../../../components/console/plots/PlotsPanel";
import FallbackPlotsPanel from "../../../../components/console/plots/FallbackPlotsPanel";

const params = Astro.params;
const getProjectUrl = `${INTERNAL_API_URL ?? BENCHER_API_URL}/v0/projects/${
	params.project
}`;

let jsonProject: undefined | JsonProject;
let title = "Public Plots";
let description = "View continuous benchmarking plots on Bencher";
let notFound = false;
if (params.project && params.project !== "undefined") {
	try {
		const projectResponse = await fetchSSR(getProjectUrl);
		jsonProject = await projectResponse.json();
		if (jsonProject?.uuid) {
			title = `${jsonProject?.name}`;
			description = `View ${jsonProject?.name} continuous benchmarking plots on Bencher`;
		} else {
			title = "Not Found";
			description = "Public plots not found";
			notFound = true;
		}
	} catch (e) {
		console.error(`Failed to fetch plots data: ${e}`);
		Sentry.captureException(e);
	}
}
---

<PerfLayout
  title={title}
  description={description}
  published={jsonProject?.created}
  modified={jsonProject?.modified}
>
  { notFound ?
  <section class="section">
    <div class="container">
      <div class="columns is-mobile">
        <div class="column">
          <h1 class="title is-1">Not Found</h1>
          <hr />
          <p>Could not find plots for Project <code>{params.project}</code></p>
          <p>The Project may be private or the plot may not exist.</p>
          <br />
          <a class="button" href={`/perf/${params.project}`}>Go to Project</a>
        </div>
        <div class="column">
          <Tetris />
        </div>
      </div>
    </div>
  </section>
  :
  <section class="section">
    <div class="container">
  <PlotsPanel
    client:only="solid-js"
    isConsole={false}
    apiUrl={BENCHER_API_URL}
    params={params}
  >
    <FallbackPlotsPanel  slot="fallback" />
  </PlotsPanel>
</div>
</section>
  }
</PerfLayout>