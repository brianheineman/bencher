---
import {
	benchmarking,
	trackInCi,
	caseStudy,
	engineering,
} from "../../../i18n/ui.ts";
import { getLangCollection, langPath } from "../../../i18n/utils.ts";
import Collection, { collectionPath } from "../../../util/collection.ts";

interface Props {
	lang: string;
}

// Learn
const benchmarkingCppCollection = await getLangCollection(
	Collection.benchmarking_cpp,
);
const benchmarkingPythonCollection = await getLangCollection(
	Collection.benchmarking_python,
);
const benchmarkingRustCollection = await getLangCollection(
	Collection.benchmarking_rust,
);
const trackInCiCppCollection = await getLangCollection(
	Collection.track_in_ci_cpp,
);
const trackInCiPythonCollection = await getLangCollection(
	Collection.track_in_ci_python,
);
const trackInCiRustCollection = await getLangCollection(
	Collection.track_in_ci_rust,
);
const caseStudyCollection = await getLangCollection(Collection.case_study);
const engineeringCollection = await getLangCollection(Collection.engineering);

const { lang } = Astro.props;
---

{[
  {
    label: benchmarking(lang),
    sections: [
    {
        section: "C++",
        collection: Collection.benchmarking_cpp,
        content: benchmarkingCppCollection,
      },
      {
        section: "Python",
        collection: Collection.benchmarking_python,
        content: benchmarkingPythonCollection,
      },
      {
        section: "Rust",
        collection: Collection.benchmarking_rust,
        content: benchmarkingRustCollection,
      }
    ],
  },
  {
    label: trackInCi(lang),
    sections: [
      {
        section: "C++",
        collection: Collection.track_in_ci_cpp,
        content: trackInCiCppCollection,
      },
      {
        section: "Python",
        collection: Collection.track_in_ci_python,
        content: trackInCiPythonCollection,
      },
      {
        section: "Rust",
        collection: Collection.track_in_ci_rust,
        content: trackInCiRustCollection,
      }
    ],
  },
  {
    label: caseStudy(lang),
    sections: [
      {
        section: null,
        collection: Collection.case_study,
        content: caseStudyCollection,
      }
    ],
  },
  {
    label: engineering(lang),
    sections: [
      {
        section: null,
        collection: Collection.engineering,
        content: engineeringCollection,
      }
    ],
  },
].map(({ label, sections }) => (
  <p class="menu-label">{label}</p>
  <div>
  {sections.map(({ section, collection, content }) => (
    <>{ section && <p>{section}</p>}</>
    <ul class="menu-list">
      {
        content[lang]?.map((page) => (
          <li>
            <a href={`/${langPath(lang)}learn/${collectionPath(collection)}/${page.slug}/`}>{page.data.title}</a>
          </li>
        ))
      }
    </ul>
  ))}
  </div>
))}